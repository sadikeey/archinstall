#+TITLE: ARCH INSTALL SCRIPT
#+AUTHOR: SADIK SAIFI

* TABLE OF CONTENTS :toc:
- [[#about][ABOUT]]
- [[#how-to-use][HOW TO USE]]
  - [[#part-1][Part 1]]
  - [[#part-2][Part 2]]
  - [[#part-3][Part 3]]
- [[#part-1-1][PART 1]]
  - [[#setting-up-internet][Setting Up Internet]]
  - [[#setting-up][Setting Up]]
  - [[#partitioning-drive][Partitioning Drive]]
  - [[#mounting-partition][Mounting Partition]]
  - [[#installing-base-system][Installing Base System]]
- [[#part-2-1][PART 2]]
  - [[#setting-up-1][Setting Up]]
  - [[#installing-grub][Installing Grub]]
  - [[#adding-additional-repos][Adding Additional Repos]]
  - [[#installing-packages][Installing Packages]]
  - [[#enable-system-services][Enable System Services]]
  - [[#setting-user-and-shell][Setting User and Shell]]
- [[#part-3-1][PART 3]]
  - [[#making-neccessary-dirs][Making Neccessary Dirs]]
  - [[#installing-zapzsh-plugin-manager][Installing Zap(zsh plugin manager)]]
  - [[#syncing-dotfiles][Syncing Dotfiles]]
  - [[#installing-dmenu][Installing Dmenu]]
  - [[#setting-up-xorg-stuff][Setting up Xorg stuff]]
  - [[#installing-aur-helperparu][Installing AUR helper(paru)]]
  - [[#setting-up-autologinnot-recommended][Setting Up Autologin(not recommended)]]
  - [[#misc][Misc]]
- [[#finished][Finished]]

* ABOUT
This is a automated dirty arch linux install script for installing arch linux with my most used [[./pkglist.txt][programs]] and [[https://github.com/sadikeey/dotfiles][dotfiles]].

* HOW TO USE

** Part 1

- This script contains three parts [[./arch_install.sh][arch_install.sh]], [[./arch_install2.sh][arch_install2.sh]], [[./arch_install.sh][arch_install3.sh]].
- First download the vanilla [[https://archlinux.org/download/][Arch Linux]] iso.
- Make a bootable pendrive with [[https://wiki.archlinux.org/title/Dd][dd]].:

  #+begin_src shell

    dd bs=4M if=path/to/archlinux-version-x86_64.iso of=/dev/sdx conv=fsync oflag=direct status=progress

  #+end_src

- Now boot from that bootable pendrive
- After booting first connect to wired/wireless connection(prefered wired).
- Now install [[https://git-scm.com][git]].

  #+begin_src shell

    pacman -Syy git

  #+end_src

- Clone this [[https://github.com/sadikeey/archinstall.git][archinstall]] repository and execute first [[./arch_install.sh][arch_install.sh]] script.

  #+begin_src shell

    git clone https://github.com/sadikeey/archinstall.git
    cd archinstall
    ./arch_install

  #+end_src

** Part 2
- After chroot into newly installed system.
- Execute [[./arch_install2.sh][arch_install2.sh]] script.

  #+begin_src shell

    ./arch_install2.sh

  #+end_src

** Part 3
- After reboot into newly installed system.
- Execute [[./arch_install3.sh][arch_install3.sh]] script.

  #+begin_src shell

    ./arch_install3.sh

  #+end_src

* PART 1
** Setting Up Internet

  #+begin_src shell

    echo "##########################################################################"
    echo "##   Choose a connection for internet between wired and wireless/wifi   ##"
    echo "##            Type 1(for wired) / Type 2(for wireless/wifi)             ##"
    echo "##########################################################################"
    read connection

    if [[ $connection = 2 ]] ; then
        iwctl device list
        iwctl station device scan
        iwctl station device get-networks
        iwctl --passphrase=passphrase station device connect ssid
    fi

  #+end_src

** Setting Up

#+begin_src shell :tangle arch_install.sh

  #!/bin/bash

  printf '\033c'
  echo "Welcome to SDK's arch installer script"
  sed -i "s/^#ParallelDownloads = 5$/ParallelDownloads = 5/" /etc/pacman.conf
  pacman --noconfirm -Sy archlinux-keyring
  loadkeys us
  timedatectl set-ntp true

#+end_src

** Partitioning Drive

#+begin_src shell :tangle arch_install.sh

  lsblk
  echo "Enter the drive and create root(50G+), efi(512M+), home(rest), swap(RAMx2G+) partition: "
  read drive
  cfdisk $drive 
  sleep 2
  lsblk

  echo "Enter the Root partition as (/dev/drive_name): "
  read partition
  mkfs.ext4 $partition 

  echo "Enter EFI partition as (/dev/drive_name): "
  read efipartition
  mkfs.vfat -F 32 $efipartition

  echo "Enter Home partition as (/dev/drive_name): "
  read homepartition
  mkfs.ext4 $homepartition

  echo "Enter Swap partition as (/dev/drive_name): "
  read swappartition
  mkswap $swappartition
  swapon $swappartition

#+end_src

** Mounting Partition

#+begin_src shell :tangle arch_install.sh

  mount $partition /mnt 
  mkdir -p /mnt/boot/EFI
  mkdir -p /mnt/home
  mount $efipartition /mnt/boot/EFI 
  mount $homepartition /mnt/home 

#+end_src

** Installing Base System

#+begin_src shell :tangle arch_install.sh

  pacstrap /mnt base linux linux-firmware
  genfstab -U /mnt >> /mnt/etc/fstab
  cp pkglist.txt /mnt
  cp arch_install2.sh /mnt
  cp arch_install3.sh /mnt
  echo "##########################################################################################"
  echo "##    Now you are gonna chroot into new installed system so execute arch_install2.sh    ##"
  echo "##########################################################################################"
  arch-chroot /mnt
  exit 

#+end_src

* PART 2
** Setting Up 

#+begin_src shell :tangle arch_install2.sh

  #!/bin/bash

  printf '\033c'
  pacman -S --noconfirm sed
  sed -i "s/^#ParallelDownloads = 5$/ParallelDownloads = 5/" /etc/pacman.conf
  ln -sf /usr/share/zoneinfo/Asia/Kolkata /etc/localtime
  hwclock --systohc
  echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen
  locale-gen
  echo "LANG=en_US.UTF-8" > /etc/locale.conf
  echo "LC_CTYPE=en_US.UTF-8" >> /etc/locale.conf
  echo "KEYMAP=us" > /etc/vconsole.conf
  echo "Enter Hostname: "
  read hostname
  echo $hostname > /etc/hostname
  echo "127.0.0.1       localhost" >> /etc/hosts
  echo "::1             localhost" >> /etc/hosts
  echo "127.0.1.1       $hostname.localdomain $hostname" >> /etc/hosts
  mkinitcpio -P
  echo "Enter root password: "
  passwd

#+end_src

** Installing Grub

#+begin_src shell :tangle arch_install2.sh

  pacman --noconfirm -S grub efibootmgr os-prober
  grub-install --target=x86_64-efi --efi-directory=/boot/EFI --bootloader-id=GRUB
  sed -i 's/quiet/pci=noaer/g' /etc/default/grub
  sed -i 's/GRUB_TIMEOUT=5/GRUB_TIMEOUT=0/g' /etc/default/grub
  grub-mkconfig -o /boot/grub/grub.cfg

#+end_src

** Adding Additional Repos

*** Multilib (for 32bit)

#+begin_src shell

  echo "[multilib]" >> /etc/pacman.conf
  echo "Include = /etc/pacman.d/mirrorlist" >> /etc/pacman.conf

#+end_src

*** Chaotic Aur

#+begin_src shell :tangle arch_install2.sh

  pacman-key --recv-key FBA220DFC880C036 --keyserver keyserver.ubuntu.com
  pacman-key --lsign-key FBA220DFC880C036
  pacman -U 'https://cdn-mirror.chaotic.cx/chaotic-aur/chaotic-keyring.pkg.tar.zst' 'https://cdn-mirror.chaotic.cx/chaotic-aur/chaotic-mirrorlist.pkg.tar.zst'
  echo "[chaotic-aur]" >> /etc/pacman.conf
  echo "Include = /etc/pacman.d/chaotic-mirrorlist" >> /etc/pacman.conf

#+end_src

** Installing Packages

#+begin_src shell :tangle arch_install2.sh

  pacman --needed --ask 4 -Syy - < pkglist.txt || error "Failed to install required packages."

#+end_src

** Enable System Services

#+begin_src shell :tangle arch_install2.sh

  systemctl enable NetworkManager 
  systemctl enable libvirtd
  systemctl enable tlp 
  systemctl enable auto-cpufreq

#+end_src

** Setting User and Shell

#+begin_src shell :tangle arch_install2.sh

  echo "%wheel ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
  echo "Enter Username: "
  read username
  useradd -m $username
  passwd $username
  usermod -aG wheel,audio,video,storage $username
  usermod -G libvirt -a $username
  chsh -s /usr/bin/zsh $username
  [ -d "/home/$username/" ] || mkdir -p /home/$username
  cp arch_install3.sh /home/$username
  echo "##########################################################################################"
  echo "##    Preinstallation part2 has complete, so now reboot and execute arch_install3.sh    ##"
  echo "##########################################################################################"
  exit

#+end_src

* PART 3
** Making Neccessary Dirs

#+begin_src shell :tangle arch_install3.sh

  #!/bin/bash

  printf '\033c'
  cd $HOME

  [ -d "$HOME/.config/share" ] || mkdir -p $HOME/.config
  [ -d "$HOME/.local" ] || mkdir -p $HOME/.local/share
  [ -d "$HOME/.local/src" ] || mkdir -p $HOME/.local/src
  [ -d "$HOME/Downloads" ] || mkdir -p $HOME/Downloads
  [ -d "$HOME/Documents" ] || mkdir -p $HOME/Documents
  [ -d "$HOME/Projects" ] || mkdir -p $HOME/Projects
  [ -d "$HOME/Music" ] || mkdir -p $HOME/Music
  [ -d "$HOME/Videos" ] || mkdir -p $HOME/Videos
  [ -d "$HOME/Repos" ] || mkdir -p $HOME/Repos

#+end_src

** Installing Zap(zsh plugin manager)

#+begin_src shell :tangle arch_install3.sh

  zsh <(curl -s https://raw.githubusercontent.com/zap-zsh/zap/master/install.zsh)

#+end_src

** Syncing Dotfiles

#+begin_src shell :tangle arch_install3.sh

  git clone https://github.com/sadikeey/dotfiles.git $HOME/.dotfiles
  cd $HOME/.dotfiles
  stow */
  cd $HOME

#+end_src

** Installing Dmenu

#+begin_src shell :tangle arch_install3.sh

  git clone https://github.com/sadikeey/dmenu.git $HOME/.local/src/dmenu
  cd $HOME/.local/src/dmenu
  sudo make clean install
  cd $HOME

#+end_src

** Setting up Xorg stuff

#+begin_src shell :tangle arch_install3.sh

  [ -d "/etc/X11/xorg.conf.d" ] || sudo mkdir -p /etc/X11/xorg.conf.d
  sudo cp $HOME/.dotfiles/.misc/configs/etc-X11-xorg.conf.d/* /etc/X11/xorg.conf.d/

#+end_src

** Installing AUR helper(paru)

#+begin_src shell :tangle arch_install3.sh

  git clone --depth=1 https://aur.archlinux.org/paru-bin.git $HOME/paru-bin
  cd $HOME/paru-bin
  makepkg -si
  cd $HOME
  rm -rf $HOME/paru-bin

#+end_src

*** Installing packages from aur

#+begin_src shell :tangle arch_install3.sh
  paru -S devour google-java-format nodejs-neovim
#+end_src

** Setting Up Autologin(not recommended)
This will login automatically without asking password, I know this is not secure but I don't care.

#+begin_src shell :tangle arch_install3.sh

  [ -d "/etc/systemd/system/getty@tty1.service.d/" ] || sudo mkdir -p /etc/systemd/system/getty@tty1.service.d/
  sudo $HOME/.dotfiles/.misc/autologin.conf

#+end_src

** Misc

*** Setting Wallpaper

#+begin_src shell :tangle arch_install3.sh

  # Setting Wallpaper
  cp $HOME/.dotfiles/.misc/wall.jpg $HOME/.config/

#+end_src

* Finished

#+begin_src shell :tangle arch_install3.sh

  echo "#################################################"
  echo "## You have successfully installed the system! ##"
  echo "#################################################"

  exit 

#+end_src


















